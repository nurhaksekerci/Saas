# Generated by Django 5.1.6 on 2025-02-24 08:00

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('name', models.CharField(max_length=50, verbose_name='İl Adı')),
                ('code', models.CharField(max_length=2, unique=True, verbose_name='İl Kodu')),
            ],
            options={
                'verbose_name': 'İl',
                'verbose_name_plural': 'İller',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('name', models.CharField(max_length=100, verbose_name='Şirket Adı')),
                ('company_type', models.CharField(choices=[('sahis', 'Şahıs Şirketi'), ('kolektif', 'Kolektif Şirket'), ('komandit', 'Komandit Şirket'), ('limited', 'Limited Şirket'), ('anonim', 'Anonim Şirket'), ('kooperatif', 'Kooperatif'), ('other', 'Diğer')], default='limited', max_length=20, verbose_name='Şirket Türü')),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True, verbose_name='URL')),
                ('tax_number', models.CharField(max_length=10, unique=True, verbose_name='Vergi Numarası')),
                ('tax_office', models.CharField(max_length=50, verbose_name='Vergi Dairesi')),
                ('phone', models.CharField(max_length=15, verbose_name='Telefon')),
                ('email', models.EmailField(max_length=254, verbose_name='E-posta')),
                ('address', models.TextField(verbose_name='Adres')),
            ],
            options={
                'verbose_name': 'Şirket',
                'verbose_name_plural': 'Şirketler',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('name', models.CharField(max_length=50, verbose_name='Para Birimi Adı')),
                ('code', models.CharField(max_length=3, unique=True, verbose_name='Para Birimi Kodu')),
                ('symbol', models.CharField(max_length=5, verbose_name='Sembol')),
            ],
            options={
                'verbose_name': 'Para Birimi',
                'verbose_name_plural': 'Para Birimleri',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('title', models.CharField(max_length=255, verbose_name='Başlık')),
                ('content', models.TextField(verbose_name='İçerik')),
                ('priority', models.CharField(choices=[('low', 'Düşük'), ('medium', 'Orta'), ('high', 'Yüksek'), ('urgent', 'Acil')], default='medium', max_length=20, verbose_name='Öncelik')),
                ('target_role', models.CharField(choices=[('all', 'Tüm Kullanıcılar'), ('superuser', 'Süper Kullanıcılar'), ('staff', 'Sistem Yetkilileri'), ('company_admin', 'Şirket Yöneticileri'), ('branch_admin', 'Şube Yöneticileri'), ('employee', 'Çalışanlar')], default='all', max_length=20, verbose_name='Hedef Rol')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Yayın Tarihi')),
                ('end_date', models.DateTimeField(blank=True, help_text='Boş bırakılırsa süresiz yayınlanır', null=True, verbose_name='Bitiş Tarihi')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_announcements', to=settings.AUTH_USER_MODEL, verbose_name='Oluşturan')),
                ('target_companies', models.ManyToManyField(blank=True, help_text='Boş bırakılırsa tüm şirketler için geçerli olur', to='saas.company', verbose_name='Hedef Şirketler')),
            ],
            options={
                'verbose_name': 'Duyuru',
                'verbose_name_plural': 'Duyurular',
                'ordering': ['-publish_date', '-priority'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('action', models.CharField(choices=[('create', 'Oluşturma'), ('update', 'Güncelleme'), ('delete', 'Silme'), ('login', 'Giriş'), ('logout', 'Çıkış'), ('other', 'Diğer')], max_length=20, verbose_name='İşlem')),
                ('object_id', models.PositiveIntegerField(verbose_name='Nesne ID')),
                ('object_repr', models.CharField(max_length=200, verbose_name='Nesne Gösterimi')),
                ('changes', models.JSONField(default=dict, verbose_name='Değişiklikler')),
                ('ip_address', models.GenericIPAddressField(null=True, verbose_name='IP Adresi')),
                ('user_agent', models.CharField(blank=True, max_length=255, verbose_name='Kullanıcı Tarayıcısı')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='İçerik Tipi')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='saas.company', verbose_name='Şirket')),
            ],
            options={
                'verbose_name': 'İşlem Kaydı',
                'verbose_name_plural': 'İşlem Kayıtları',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CompanyBranding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logos/', verbose_name='Logo')),
                ('favicon', models.ImageField(blank=True, null=True, upload_to='company_favicons/', verbose_name='Favicon')),
                ('primary_color', models.CharField(default='#007bff', max_length=7, verbose_name='Ana Renk')),
                ('secondary_color', models.CharField(default='#6c757d', max_length=7, verbose_name='İkincil Renk')),
                ('custom_css', models.TextField(blank=True, verbose_name='Özel CSS')),
                ('custom_js', models.TextField(blank=True, verbose_name='Özel JavaScript')),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='branding', to='saas.company', verbose_name='Şirket')),
            ],
            options={
                'verbose_name': 'Şirket Görünümü',
                'verbose_name_plural': 'Şirket Görünümleri',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('name', models.CharField(max_length=50, verbose_name='İlçe Adı')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='districts', to='saas.city', verbose_name='İl')),
            ],
            options={
                'verbose_name': 'İlçe',
                'verbose_name_plural': 'İlçeler',
                'ordering': ['name'],
                'unique_together': {('city', 'name')},
            },
        ),
        migrations.CreateModel(
            name='FileStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('file', models.FileField(upload_to='company_files/', verbose_name='Dosya')),
                ('file_type', models.CharField(choices=[('document', 'Doküman'), ('image', 'Görsel'), ('video', 'Video'), ('other', 'Diğer')], max_length=20, verbose_name='Dosya Tipi')),
                ('file_size', models.PositiveIntegerField(verbose_name='Dosya Boyutu (bytes)')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='saas.company', verbose_name='Şirket')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_files', to=settings.AUTH_USER_MODEL, verbose_name='Yükleyen')),
            ],
            options={
                'verbose_name': 'Dosya',
                'verbose_name_plural': 'Dosyalar',
            },
        ),
        migrations.CreateModel(
            name='Integration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('name', models.CharField(max_length=100, verbose_name='Entegrasyon Adı')),
                ('integration_type', models.CharField(choices=[('payment', 'Ödeme Sistemi'), ('sms', 'SMS Servisi'), ('email', 'E-posta Servisi'), ('crm', 'CRM Sistemi'), ('erp', 'ERP Sistemi'), ('other', 'Diğer')], max_length=20, verbose_name='Entegrasyon Tipi')),
                ('api_key', models.CharField(blank=True, max_length=255, verbose_name='API Anahtarı')),
                ('api_secret', models.CharField(blank=True, max_length=255, verbose_name='API Gizli Anahtarı')),
                ('settings', models.JSONField(default=dict, verbose_name='Ayarlar')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integrations', to='saas.company', verbose_name='Şirket')),
            ],
            options={
                'verbose_name': 'Entegrasyon',
                'verbose_name_plural': 'Entegrasyonlar',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceMode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('title', models.CharField(max_length=255, verbose_name='Bakım Başlığı')),
                ('description', models.TextField(verbose_name='Bakım Açıklaması')),
                ('platform', models.CharField(choices=[('all', 'Tüm Platformlar'), ('web', 'Web Uygulaması'), ('mobile', 'Mobil Uygulama'), ('api', 'API Servisleri')], default='all', max_length=20, verbose_name='Platform')),
                ('status', models.CharField(choices=[('scheduled', 'Planlandı'), ('in_progress', 'Devam Ediyor'), ('completed', 'Tamamlandı'), ('canceled', 'İptal Edildi')], default='scheduled', max_length=20, verbose_name='Durum')),
                ('planned_start_time', models.DateTimeField(verbose_name='Planlanan Başlangıç')),
                ('planned_end_time', models.DateTimeField(verbose_name='Planlanan Bitiş')),
                ('actual_start_time', models.DateTimeField(blank=True, null=True, verbose_name='Gerçek Başlangıç')),
                ('actual_end_time', models.DateTimeField(blank=True, null=True, verbose_name='Gerçek Bitiş')),
                ('show_message', models.BooleanField(default=True, verbose_name='Mesaj Gösterilsin mi?')),
                ('block_access', models.BooleanField(default=True, verbose_name='Erişim Engellensin mi?')),
                ('access_level', models.CharField(choices=[('none', 'Erişim Yok'), ('superuser', 'Sadece Süper Kullanıcılar'), ('staff', 'Yönetici Kullanıcılar'), ('company_admin', 'Şirket Yöneticileri'), ('all', 'Tüm Kullanıcılar')], default='superuser', help_text='Bakım sırasında kimlerin erişebileceğini belirler', max_length=20, verbose_name='Erişim Seviyesi')),
                ('maintenance_team', models.JSONField(blank=True, default=list, help_text='Bakımdan sorumlu ekip üyeleri ve görevleri', verbose_name='Bakım Ekibi')),
                ('allowed_companies', models.ManyToManyField(blank=True, help_text='Sadece seçili şirketlerin erişimine izin verir (boş bırakılırsa tüm şirketler için geçerlidir)', to='saas.company', verbose_name='İzin Verilen Şirketler')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_maintenances', to=settings.AUTH_USER_MODEL, verbose_name='Oluşturan')),
            ],
            options={
                'verbose_name': 'Bakım Modu',
                'verbose_name_plural': 'Bakım Modları',
                'ordering': ['-planned_start_time'],
            },
        ),
        migrations.CreateModel(
            name='Neighborhood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('name', models.CharField(max_length=100, verbose_name='Mahalle Adı')),
                ('postal_code', models.CharField(blank=True, max_length=5, null=True, verbose_name='Posta Kodu')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='neighborhoods', to='saas.district', verbose_name='İlçe')),
            ],
            options={
                'verbose_name': 'Mahalle',
                'verbose_name_plural': 'Mahalleler',
                'ordering': ['name'],
                'unique_together': {('district', 'name')},
            },
        ),
        migrations.AddField(
            model_name='company',
            name='neighborhood',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='saas.neighborhood', verbose_name='Mahalle'),
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('name', models.CharField(max_length=100, verbose_name='Şube Adı')),
                ('slug', models.SlugField(blank=True, max_length=150, verbose_name='URL')),
                ('phone', models.CharField(max_length=15, verbose_name='Telefon')),
                ('email', models.EmailField(max_length=254, verbose_name='E-posta')),
                ('address', models.TextField(verbose_name='Adres')),
                ('is_main_branch', models.BooleanField(default=False, verbose_name='Ana Şube mi?')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branches', to='saas.company', verbose_name='Şirket')),
                ('neighborhood', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='saas.neighborhood', verbose_name='Mahalle')),
            ],
            options={
                'verbose_name': 'Şube',
                'verbose_name_plural': 'Şubeler',
                'ordering': ['company', 'name'],
                'unique_together': {('company', 'name'), ('company', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('title', models.CharField(max_length=255, verbose_name='Başlık')),
                ('message', models.TextField(verbose_name='Mesaj')),
                ('notification_type', models.CharField(choices=[('info', 'Bilgi'), ('warning', 'Uyarı'), ('success', 'Başarılı'), ('error', 'Hata'), ('system', 'Sistem')], default='info', max_length=20, verbose_name='Bildirim Tipi')),
                ('scope', models.CharField(choices=[('user', 'Tek Kullanıcı'), ('company', 'Şirket Geneli'), ('branch', 'Şube Geneli'), ('all', 'Tüm Kullanıcılar')], default='user', max_length=20, verbose_name='Kapsam')),
                ('reference_model', models.CharField(blank=True, max_length=50, null=True)),
                ('reference_id', models.PositiveIntegerField(blank=True, null=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='saas.branch', verbose_name='Şube')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='saas.company', verbose_name='Şirket')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_notifications', to=settings.AUTH_USER_MODEL, verbose_name='Oluşturan')),
            ],
            options={
                'verbose_name': 'Bildirim',
                'verbose_name_plural': 'Bildirimler',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('name', models.CharField(max_length=50, verbose_name='Plan Adı')),
                ('slug', models.SlugField(blank=True, max_length=70, unique=True, verbose_name='URL')),
                ('description', models.TextField(verbose_name='Açıklama')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Fiyat')),
                ('max_users', models.PositiveIntegerField(verbose_name='Maksimum Kullanıcı Sayısı')),
                ('max_storage', models.PositiveIntegerField(verbose_name='Depolama Alanı (MB)')),
                ('features', models.JSONField(default=dict, verbose_name='Özellikler')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='saas.currency', verbose_name='Para Birimi')),
            ],
            options={
                'verbose_name': 'Plan',
                'verbose_name_plural': 'Planlar',
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('status', models.CharField(choices=[('trial', 'Deneme'), ('active', 'Aktif'), ('past_due', 'Ödeme Bekliyor'), ('canceled', 'İptal Edildi'), ('expired', 'Süresi Doldu')], default='trial', max_length=20, verbose_name='Durum')),
                ('start_date', models.DateTimeField(verbose_name='Başlangıç Tarihi')),
                ('end_date', models.DateTimeField(verbose_name='Bitiş Tarihi')),
                ('trial_ends', models.DateTimeField(blank=True, null=True, verbose_name='Deneme Süresi Bitişi')),
                ('canceled_at', models.DateTimeField(blank=True, null=True, verbose_name='İptal Tarihi')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='saas.company', verbose_name='Şirket')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='saas.plan', verbose_name='Plan')),
            ],
            options={
                'verbose_name': 'Abonelik',
                'verbose_name_plural': 'Abonelikler',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('number', models.CharField(max_length=50, unique=True, verbose_name='Fatura No')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Tutar')),
                ('status', models.CharField(choices=[('draft', 'Taslak'), ('pending', 'Beklemede'), ('paid', 'Ödendi'), ('canceled', 'İptal Edildi'), ('refunded', 'İade Edildi')], default='draft', max_length=20, verbose_name='Durum')),
                ('due_date', models.DateField(verbose_name='Son Ödeme Tarihi')),
                ('paid_at', models.DateTimeField(blank=True, null=True, verbose_name='Ödeme Tarihi')),
                ('notes', models.TextField(blank=True, verbose_name='Notlar')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='saas.currency', verbose_name='Para Birimi')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='saas.subscription', verbose_name='Abonelik')),
            ],
            options={
                'verbose_name': 'Fatura',
                'verbose_name_plural': 'Faturalar',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnnouncementRead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('read_at', models.DateTimeField(auto_now_add=True, verbose_name='Okunma Tarihi')),
                ('announcement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reads', to='saas.announcement', verbose_name='Duyuru')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcement_reads', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Duyuru Okunma',
                'verbose_name_plural': 'Duyuru Okunmaları',
                'ordering': ['-read_at'],
                'unique_together': {('announcement', 'user')},
            },
        ),
        migrations.CreateModel(
            name='APIUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('endpoint', models.CharField(max_length=255, verbose_name='API Endpoint')),
                ('method', models.CharField(max_length=10, verbose_name='HTTP Metodu')),
                ('requests_count', models.PositiveIntegerField(default=0, verbose_name='İstek Sayısı')),
                ('data_transfer', models.BigIntegerField(default=0, verbose_name='Veri Transferi (bytes)')),
                ('date', models.DateField(verbose_name='Tarih')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_usage', to='saas.company', verbose_name='Şirket')),
            ],
            options={
                'verbose_name': 'API Kullanımı',
                'verbose_name_plural': 'API Kullanımları',
                'unique_together': {('company', 'endpoint', 'method', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('slug', models.SlugField(blank=True, max_length=150, verbose_name='URL')),
                ('identity_number', models.CharField(max_length=11, unique=True, verbose_name='TC Kimlik No')),
                ('birth_date', models.DateField(verbose_name='Doğum Tarihi')),
                ('gender', models.CharField(choices=[('M', 'Erkek'), ('F', 'Kadın'), ('O', 'Diğer')], max_length=1, verbose_name='Cinsiyet')),
                ('phone', models.CharField(max_length=15, verbose_name='Telefon')),
                ('address', models.TextField(verbose_name='Adres')),
                ('hire_date', models.DateField(verbose_name='İşe Başlama Tarihi')),
                ('termination_date', models.DateField(blank=True, null=True, verbose_name='İşten Ayrılma Tarihi')),
                ('role', models.CharField(choices=[('employee', 'Çalışan'), ('branch_admin', 'Şube Yöneticisi'), ('company_admin', 'Şirket Yöneticisi')], default='employee', max_length=20, verbose_name='Rol')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='saas.branch', verbose_name='Şube')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
                ('neighborhood', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='saas.neighborhood', verbose_name='Mahalle')),
            ],
            options={
                'verbose_name': 'Çalışan',
                'verbose_name_plural': 'Çalışanlar',
                'ordering': ['user__first_name', 'user__last_name'],
                'unique_together': {('branch', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='NotificationRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('is_read', models.BooleanField(default=False, verbose_name='Okundu mu?')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Okunma Tarihi')),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipients', to='saas.notification', verbose_name='Bildirim')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Bildirim Alıcısı',
                'verbose_name_plural': 'Bildirim Alıcıları',
                'ordering': ['-notification__created_at'],
                'unique_together': {('notification', 'user')},
            },
        ),
    ]
